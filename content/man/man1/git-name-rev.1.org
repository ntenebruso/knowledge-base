#+TITLE: Manpages - git-name-rev.1
* NAME
git-name-rev - Find symbolic names for given revs

* SYNOPSIS
#+begin_example
git name-rev [--tags] [--refs=<pattern>]
               ( --all | --annotate-stdin | <commit-ish>... )
#+end_example

* DESCRIPTION
Finds symbolic names suitable for human digestion for revisions given in
any format parsable by /git rev-parse/.

* OPTIONS
--tags

#+begin_quote
Do not use branch names, but only tags to name the commits

#+end_quote

--refs=<pattern>

#+begin_quote
Only use refs whose names match a given shell pattern. The pattern can
be a branch name, a tag name, or a fully qualified ref name. If given
multiple times, use refs whose names match any of the given shell
patterns. Use *--no-refs* to clear any previous ref patterns given.

#+end_quote

--exclude=<pattern>

#+begin_quote
Do not use any ref whose name matches a given shell pattern. The pattern
can be one of branch name, tag name or fully qualified ref name. If
given multiple times, a ref will be excluded when it matches any of the
given patterns. When used together with --refs, a ref will be used as a
match only when it matches at least one --refs pattern and does not
match any --exclude patterns. Use *--no-exclude* to clear the list of
exclude patterns.

#+end_quote

--all

#+begin_quote
List all commits reachable from all refs

#+end_quote

--annotate-stdin

#+begin_quote
Transform stdin by substituting all the 40-character SHA-1 hexes (say
$hex) with "$hex ($rev_name)". When used with --name-only, substitute
with "$rev_name", omitting $hex altogether. This option was called
*--stdin* in older versions of Git.

For example:

#+begin_quote
#+begin_example
$ cat sample.txt

An abbreviated revision 2ae0a9cb82 will not be substituted.
The full name after substitution is 2ae0a9cb8298185a94e5998086f380a355dd8907,
while its tree object is 70d105cc79e63b81cfdcb08a15297c23e60b07ad

$ git name-rev --annotate-stdin <sample.txt

An abbreviated revision 2ae0a9cb82 will not be substituted.
The full name after substitution is 2ae0a9cb8298185a94e5998086f380a355dd8907 (master),
while its tree object is 70d105cc79e63b81cfdcb08a15297c23e60b07ad

$ git name-rev --name-only --annotate-stdin <sample.txt

An abbreviated revision 2ae0a9cb82 will not be substituted.
The full name after substitution is master,
while its tree object is 70d105cc79e63b81cfdcb08a15297c23e60b07ad
#+end_example

#+end_quote

#+end_quote

--name-only

#+begin_quote
Instead of printing both the SHA-1 and the name, print only the name. If
given with --tags the usual tag prefix of "tags/" is also omitted from
the name, matching the output of *git-describe* more closely.

#+end_quote

--no-undefined

#+begin_quote
Die with error code != 0 when a reference is undefined, instead of
printing *undefined*.

#+end_quote

--always

#+begin_quote
Show uniquely abbreviated commit object as fallback.

#+end_quote

* EXAMPLES
Given a commit, find out where it is relative to the local refs. Say
somebody wrote you about that fantastic commit
33db5f4d9027a10e477ccf054b2c1ab94f74c85a. Of course, you look into the
commit, but that only tells you what happened, but not the context.

Enter /git name-rev/:

#+begin_quote
#+begin_example
% git name-rev 33db5f4d9027a10e477ccf054b2c1ab94f74c85a
33db5f4d9027a10e477ccf054b2c1ab94f74c85a tags/v0.99~940
#+end_example

#+end_quote

Now you are wiser, because you know that it happened 940 revisions
before v0.99.

Another nice thing you can do is:

#+begin_quote
#+begin_example
% git log | git name-rev --annotate-stdin
#+end_example

#+end_quote

* GIT
Part of the *git*(1) suite

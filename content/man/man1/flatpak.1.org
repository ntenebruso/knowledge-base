#+TITLE: Manpages - flatpak.1
* NAME
flatpak - Build, install and run applications and runtimes

* SYNOPSIS
*flatpak* [OPTION...] {COMMAND}

* DESCRIPTION
Flatpak is a tool for managing applications and the runtimes they use.
In the Flatpak model, applications can be built and distributed
independently from the host system they are used on, and they are
isolated from the host system (sandboxed) to some degree, at runtime.

Flatpak can operate in system-wide or per-user mode. The system-wide
data (runtimes, applications and configuration) is located in
$prefix/var/lib/flatpak/, and the per-user data is in
$HOME/.local/share/flatpak/. Below these locations, there is a local
repository in the repo/ subdirectory and installed runtimes and
applications are in the corresponding runtime/ and app/ subdirectories.

System-wide remotes can be statically preconfigured by dropping
flatpakrepo files into /etc/flatpak/remotes.d/.

In addition to the system-wide installation in $prefix/var/lib/flatpak/,
which is always considered the default one unless overridden, more
system-wide installations can be defined via configuration files in
/etc/flatpak/installations.d/, which must define at least the id of the
installation and the absolute path to it. Other optional parameters like
DisplayName, Priority or StorageType are also supported.

Flatpak uses OSTree to distribute and deploy data. The repositories it
uses are OSTree repositories and can be manipulated with the *ostree*
utility. Installed runtimes and applications are OSTree checkouts.

Basic commands for building flatpaks such as build-init, build and
build-finish are included in the flatpak utility. For higher-level build
support, see the separate *flatpak-builder*(1) tool.

Flatpak supports installing from sideload repos. These are partial
copies of a repository (generated by *flatpak create-usb*) that are used
as an installation source when offline (and online as a performance
improvement). Such repositories are configured by creating symlinks to
the sideload sources in the sideload-repos subdirectory of the
installation directory (i.e. typically /var/lib/flatpak/sideload-repos
or ~/.local/share/flatpak/sideload-repos). Additionally symlinks can be
created in /run/flatpak/sideload-repos which is a better location for
non-persistent sources (as it is cleared on reboot). These symlinks can
point to either the directory given to *flatpak create-usb* which by
default writes to the subpath .ostree/repo, or directly to an ostree
repo.

* OPTIONS
The following global options are understood. Individual commands have
their own options.

*-h*, *--help*

#+begin_quote
Show help options and exit.

#+end_quote

*-v*, *--verbose*

#+begin_quote
Show debug information during command processing. Use -vv for more
detail.

#+end_quote

*--ostree-verbose*

#+begin_quote
Show OSTree debug information during command processing.

#+end_quote

*--version*

#+begin_quote
Print version information and exit.

#+end_quote

*--default-arch*

#+begin_quote
Print the default arch and exit.

#+end_quote

*--supported-arches*

#+begin_quote
Print the supported arches in priority order and exit.

#+end_quote

*--gl-drivers*

#+begin_quote
Print the list of active gl drivers and exit.

#+end_quote

*--installations*

#+begin_quote
Print paths of system installations and exit.

#+end_quote

*--print-system-only*

#+begin_quote
When the *flatpak --print-updated-env* command is run, only print the
environment for system flatpak installations, not including the user's
home installation.

#+end_quote

*--print-updated-env*

#+begin_quote
Print the set of environment variables needed to use flatpaks, amending
the current set of environment variables. This is intended to be used in
a systemd environment generator, and should not need to be run manually.

#+end_quote

* COMMANDS
Commands for managing installed applications and runtimes:

*flatpak-install*(1)

#+begin_quote
Install an application or a runtime from a remote or bundle.

#+end_quote

*flatpak-update*(1)

#+begin_quote
Update an installed application or runtime.

#+end_quote

*flatpak-uninstall*(1)

#+begin_quote
Uninstall an installed application or runtime.

#+end_quote

*flatpak-mask*(1)

#+begin_quote
Mask out updates and automatic installation.

#+end_quote

*flatpak-pin*(1)

#+begin_quote
Pin runtimes to prevent automatic removal.

#+end_quote

*flatpak-list*(1)

#+begin_quote
List installed applications and/or runtimes.

#+end_quote

*flatpak-info*(1)

#+begin_quote
Show information for an installed application or runtime.

#+end_quote

*flatpak-history*(1)

#+begin_quote
Show history.

#+end_quote

*flatpak-config*(1)

#+begin_quote
Manage flatpak configuration.

#+end_quote

*flatpak-repair*(1)

#+begin_quote
Repair flatpak installation.

#+end_quote

*flatpak-create-usb*(1)

#+begin_quote
Copy apps and/or runtimes onto removable media.

#+end_quote

Commands for finding applications and runtimes:

*flatpak-search*(1)

#+begin_quote
Search for applications and runtimes.

#+end_quote

Commands for managing running applications:

*flatpak-run*(1)

#+begin_quote
Run an application.

#+end_quote

*flatpak-kill*(1)

#+begin_quote
Stop a running application.

#+end_quote

*flatpak-override*(1)

#+begin_quote
Override permissions for an application.

#+end_quote

*flatpak-make-current*(1)

#+begin_quote
Specify the default version to run.

#+end_quote

*flatpak-enter*(1)

#+begin_quote
Enter the namespace of a running application.

#+end_quote

Commands for managing file access:

*flatpak-document-export*(1)

#+begin_quote
Grant an application access to a specific file.

#+end_quote

*flatpak-document-unexport*(1)

#+begin_quote
Revoke access to a specific file.

#+end_quote

*flatpak-document-info*(1)

#+begin_quote
Show information about a specific file.

#+end_quote

*flatpak-documents*(1)

#+begin_quote
List exported files.

#+end_quote

Commands for managing the dynamic permission store:

*flatpak-permission-remove*(1)

#+begin_quote
Remove item from permission store.

#+end_quote

*flatpak-permissions*(1)

#+begin_quote
List permissions.

#+end_quote

*flatpak-permission-show*(1)

#+begin_quote
Show app permissions.

#+end_quote

*flatpak-permission-reset*(1)

#+begin_quote
Reset app permissions.

#+end_quote

*flatpak-permission-set*(1)

#+begin_quote
Set app permissions.

#+end_quote

Commands for managing remote repositories:

*flatpak-remotes*(1)

#+begin_quote
List all configured remote repositories.

#+end_quote

*flatpak-remote-add*(1)

#+begin_quote
Add a new remote repository.

#+end_quote

*flatpak-remote-modify*(1)

#+begin_quote
Modify properties of a configured remote repository.

#+end_quote

*flatpak-remote-delete*(1)

#+begin_quote
Delete a configured remote repository.

#+end_quote

*flatpak-remote-ls*(1)

#+begin_quote
List contents of a configured remote repository.

#+end_quote

*flatpak-remote-info*(1)

#+begin_quote
Show information about a ref in a configured remote repository.

#+end_quote

Commands for building applications:

*flatpak-build-init*(1)

#+begin_quote
Initialize a build directory.

#+end_quote

*flatpak-build*(1)

#+begin_quote
Run a build command in a build directory.

#+end_quote

*flatpak-build-finish*(1)

#+begin_quote
Finalizes a build directory for export.

#+end_quote

*flatpak-build-export*(1)

#+begin_quote
Export a build directory to a repository.

#+end_quote

*flatpak-build-bundle*(1)

#+begin_quote
Create a bundle file from a ref in a local repository.

#+end_quote

*flatpak-build-import-bundle*(1)

#+begin_quote
Import a file bundle into a local repository.

#+end_quote

*flatpak-build-sign*(1)

#+begin_quote
Sign an application or runtime after its been exported.

#+end_quote

*flatpak-build-update-repo*(1)

#+begin_quote
Update the summary file in a repository.

#+end_quote

*flatpak-build-commit-from*(1)

#+begin_quote
Create a new commit based on an existing ref.

#+end_quote

*flatpak-repo*(1)

#+begin_quote
Print information about a repo.

#+end_quote

Commands available inside the sandbox:

*flatpak-spawn*(1)

#+begin_quote
Run a command in another sandbox.

#+end_quote

* FILE FORMATS
File formats that are used by Flatpak commands:

*flatpak-flatpakref*(5)

#+begin_quote
Reference to a remote for an application or runtime

#+end_quote

*flatpak-flatpakrepo*(5)

#+begin_quote
Reference to a remote

#+end_quote

*flatpak-remote*(5)

#+begin_quote
Configuration for a remote

#+end_quote

*flatpak-installation*(5)

#+begin_quote
Configuration for an installation location

#+end_quote

*flatpak-metadata*(5)

#+begin_quote
Information about an application or runtime

#+end_quote

* ENVIRONMENT
Besides standard environment variables such as *XDG_DATA_DIRS* and
*XDG_DATA_HOME*, flatpak is consulting some of its own.

*FLATPAK_USER_DIR*

#+begin_quote
The location of the per-user installation. If this is not set,
$XDG_DATA_HOME/flatpak is used.

#+end_quote

*FLATPAK_SYSTEM_DIR*

#+begin_quote
The location of the default system-wide installation. If this is not
set, /var/lib/flatpak is used (unless overridden at build time by
--localstatedir or --with-system-install-dir).

#+end_quote

*FLATPAK_SYSTEM_CACHE_DIR*

#+begin_quote
The location where temporary child repositories will be created during
pulls into the system-wide installation. If this is not set, a directory
in /var/tmp/ is used. This is useful because it is more likely to be on
the same filesystem as the system repository (thus increasing the
chances for e.g. reflink copying), and we can avoid filling the users
home directory with temporary data.

#+end_quote

*FLATPAK_CONFIG_DIR*

#+begin_quote
The location of flatpak site configuration. If this is not set,
/etc/flatpak is used (unless overridden at build time by --sysconfdir).

#+end_quote

*FLATPAK_RUN_DIR*

#+begin_quote
The location of flatpak runtime global files. If this is not set,
/run/flatpak is used.

#+end_quote

* SEE ALSO
*ostree*(1), *ostree.repo*(5), *flatpak-remote*(5),
*flatpak-installation*(5), *https://www.flatpak.org*

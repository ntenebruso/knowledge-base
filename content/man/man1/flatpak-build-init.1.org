#+TITLE: Manpages - flatpak-build-init.1
* NAME
flatpak-build-init - Initialize a build directory

* SYNOPSIS
*flatpak build-init* [OPTION...] DIRECTORY APPNAME SDK RUNTIME [BRANCH]

* DESCRIPTION
Initializes a separate build directory. DIRECTORY is the name of the
directory. APPNAME is the application id of the app that will be built.
SDK and RUNTIME specify the sdk and runtime that the application should
be built against and run in. BRANCH specify the version of sdk and
runtime

Initializes a directory as build directory which can be used as target
directory of *flatpak build*. It creates a metadata inside the given
directory. Additionally, empty files and var subdirectories are created.

It is an error to run build-init on a directory that has already been
initialized as a build directory.

* OPTIONS
The following options are understood:

*-h*, *--help*

#+begin_quote
Show help options and exit.

#+end_quote

*--arch=ARCH*

#+begin_quote
The architecture to use. See *flatpak --supported-arches* for
architectures supported by the host.

#+end_quote

*-v*, *--var=RUNTIME*

#+begin_quote
Initialize var from the named runtime.

#+end_quote

*-w*, *--writable-sdk*

#+begin_quote
Initialize /usr with a copy of the sdk, which is writable during flatpak
build. This can be used if you need to install build tools in /usr
during the build. This is stored in the usr subdirectory of the app dir,
but will not be part of the final app.

#+end_quote

*--tag=TAG*

#+begin_quote
Add a tag to the metadata file. This option can be used multiple times.

#+end_quote

*--sdk-extension=EXTENSION*

#+begin_quote
When using *--writable-sdk*, in addition to the sdk, also install the
specified extension. This option can be used multiple times.

#+end_quote

*--extension=NAME=VARIABLE[=VALUE]*

#+begin_quote
Add extension point info.

#+end_quote

*--sdk-dir*

#+begin_quote
Specify a custom subdirectory to use instead of usr for
*--writable-sdk*.

#+end_quote

*--update*

#+begin_quote
Re-initialize the sdk and var, dont fail if already initialized.

#+end_quote

*--base=APP*

#+begin_quote
Initialize the application with files from another specified
application.

#+end_quote

*--base-version=VERSION*

#+begin_quote
Specify the version to use for *--base*. If not specified, will default
to "master".

#+end_quote

*--base-extension=EXTENSION*

#+begin_quote
When using *--base*, also install the specified extension from the app.
This option can be used multiple times.

#+end_quote

*--type=TYPE*

#+begin_quote
This can be used to build different types of things. The default is
"app" which is a regular app, but "runtime" creates a runtime based on
an existing runtime, and "extension" creates an extension for an app or
runtime.

#+end_quote

*--extension-tag=EXTENSION_TAG*

#+begin_quote
If building an extension, the tag to use when searching for the mount
point of the extension.

#+end_quote

*--verbose*

#+begin_quote
Print debug information during command processing.

#+end_quote

*--ostree-verbose*

#+begin_quote
Print OSTree debug information during command processing.

#+end_quote

* EXAMPLES
*$ flatpak build-init /build/my-app org.example.myapp org.gnome.Sdk
org.gnome.Platform 3.36*

* SEE ALSO
*flatpak*(1), *flatpak-build*(1), *flatpak-build-finish*(1),
*flatpak-build-export*(1)

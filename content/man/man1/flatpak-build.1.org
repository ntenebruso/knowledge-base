#+TITLE: Manpages - flatpak-build.1
* NAME
flatpak-build - Build in a directory

* SYNOPSIS
*flatpak build* [OPTION...] DIRECTORY [COMMAND [ARG...]]

* DESCRIPTION
Runs a build command in a directory. DIRECTORY must have been
initialized with *flatpak build-init*.

The sdk that is specified in the metadata file in the directory is
mounted at /usr and the files and var subdirectories are mounted at /app
and /var, respectively. They are writable, and their contents are
preserved between build commands, to allow accumulating build artifacts
there.

* OPTIONS
The following options are understood:

*-h*, *--help*

#+begin_quote
Show help options and exit.

#+end_quote

*-v*, *--verbose*

#+begin_quote
Print debug information during command processing.

#+end_quote

*--ostree-verbose*

#+begin_quote
Print OSTree debug information during command processing.

#+end_quote

*-r*, *--runtime*

#+begin_quote
Use the non-devel runtime that is specified in the application metadata
instead of the devel runtime.

#+end_quote

*-p*, *--die-with-parent*

#+begin_quote
Kill the build process and all children when the launching process dies.

#+end_quote

*--bind-mount=DEST=SOURCE*

#+begin_quote
Add a custom bind mount in the build namespace. Can be specified
multiple times.

#+end_quote

*--build-dir=PATH*

#+begin_quote
Start the build in this directory (default is in the current directory).

#+end_quote

*--share=SUBSYSTEM*

#+begin_quote
Share a subsystem with the host session. This overrides the Context
section from the application metadata. SUBSYSTEM must be one of:
network, ipc. This option can be used multiple times.

#+end_quote

*--unshare=SUBSYSTEM*

#+begin_quote
Dont share a subsystem with the host session. This overrides the Context
section from the application metadata. SUBSYSTEM must be one of:
network, ipc. This option can be used multiple times.

#+end_quote

*--socket=SOCKET*

#+begin_quote
Expose a well-known socket to the application. This overrides to the
Context section from the application metadata. SOCKET must be one of:
x11, wayland, fallback-x11, pulseaudio, system-bus, session-bus,
ssh-auth, pcsc, cups, gpg-agent. This option can be used multiple times.

#+end_quote

*--nosocket=SOCKET*

#+begin_quote
Dont expose a well-known socket to the application. This overrides to
the Context section from the application metadata. SOCKET must be one
of: x11, wayland, fallback-x11, pulseaudio, system-bus, session-bus,
ssh-auth, pcsc, cups, gpg-agent. This option can be used multiple times.

#+end_quote

*--device=DEVICE*

#+begin_quote
Expose a device to the application. This overrides to the Context
section from the application metadata. DEVICE must be one of: dri, kvm,
shm, all. This option can be used multiple times.

#+end_quote

*--nodevice=DEVICE*

#+begin_quote
Dont expose a device to the application. This overrides to the Context
section from the application metadata. DEVICE must be one of: dri, kvm,
shm, all. This option can be used multiple times.

#+end_quote

*--allow=FEATURE*

#+begin_quote
Allow access to a specific feature. This updates the [Context] group in
the metadata. FEATURE must be one of: devel, multiarch, bluetooth,
canbus, per-app-dev-shm. This option can be used multiple times.

See *flatpak-build-finish*(1) for the meaning of the various features.

#+end_quote

*--disallow=FEATURE*

#+begin_quote
Disallow access to a specific feature. This updates the [Context] group
in the metadata. FEATURE must be one of: devel, multiarch, bluetooth,
canbus, per-app-dev-shm. This option can be used multiple times.

#+end_quote

*--filesystem=FILESYSTEM[:ro|:create]*

#+begin_quote
Allow the application access to a subset of the filesystem. This
overrides to the Context section from the application metadata.
FILESYSTEM can be one of: home, host, host-os, host-etc, xdg-desktop,
xdg-documents, xdg-download, xdg-music, xdg-pictures, xdg-public-share,
xdg-templates, xdg-videos, xdg-run, xdg-config, xdg-cache, xdg-data, an
absolute path, or a homedir-relative path like ~/dir or paths relative
to the xdg dirs, like xdg-download/subdir. The optional :ro suffix
indicates that the location will be read-only. The optional :create
suffix indicates that the location will be read-write and created if it
doesnt exist. This option can be used multiple times. See the "[Context]
filesystems" list in *flatpak-metadata*(5) for details of the meanings
of these filesystems.

#+end_quote

*--nofilesystem=FILESYSTEM*

#+begin_quote
Remove access to the specified subset of the filesystem from the
application. This overrides to the Context section from the application
metadata. FILESYSTEM can be one of: home, host, host-os, host-etc,
xdg-desktop, xdg-documents, xdg-download, xdg-music, xdg-pictures,
xdg-public-share, xdg-templates, xdg-videos, an absolute path, or a
homedir-relative path like ~/dir. This option can be used multiple
times.

#+end_quote

*--with-appdir*

#+begin_quote
Expose and configure access to the per-app storage directory in
$HOME/.var/app. This is not normally useful when building, but helps
when testing built apps.

#+end_quote

*--add-policy=SUBSYSTEM.KEY=VALUE*

#+begin_quote
Add generic policy option. For example, "--add-policy=subsystem.key=v1
--add-policy=subsystem.key=v2" would map to this metadata:

#+begin_quote
#+begin_example
[Policy subsystem]
key=v1;v2;
#+end_example

#+end_quote

This option can be used multiple times.

#+end_quote

*--remove-policy=SUBSYSTEM.KEY=VALUE*

#+begin_quote
Remove generic policy option. This option can be used multiple times.

#+end_quote

*--env=VAR=VALUE*

#+begin_quote
Set an environment variable in the application. This overrides to the
Context section from the application metadata. This option can be used
multiple times.

#+end_quote

*--unset-env=VAR*

#+begin_quote
Unset an environment variable in the application. This overrides the
unset-environment entry in the [Context] group of the metadata, and the
[Environment] group. This option can be used multiple times.

#+end_quote

*--env-fd=*/FD/

#+begin_quote
Read environment variables from the file descriptor /FD/, and set them
as if via *--env*. This can be used to avoid environment variables and
their values becoming visible to other users.

Each environment variable is in the form /VAR/=/VALUE/ followed by a
zero byte. This is the same format used by env -0 and /proc/*/environ.

#+end_quote

*--own-name=NAME*

#+begin_quote
Allow the application to own the well-known name NAME on the session
bus. This overrides to the Context section from the application
metadata. This option can be used multiple times.

#+end_quote

*--talk-name=NAME*

#+begin_quote
Allow the application to talk to the well-known name NAME on the session
bus. This overrides to the Context section from the application
metadata. This option can be used multiple times.

#+end_quote

*--system-own-name=NAME*

#+begin_quote
Allow the application to own the well-known name NAME on the system bus.
This overrides to the Context section from the application metadata.
This option can be used multiple times.

#+end_quote

*--system-talk-name=NAME*

#+begin_quote
Allow the application to talk to the well-known name NAME on the system
bus. This overrides to the Context section from the application
metadata. This option can be used multiple times.

#+end_quote

*--persist=FILENAME*

#+begin_quote
If the application doesnt have access to the real homedir, make the
(homedir-relative) path FILENAME a bind mount to the corresponding path
in the per-application directory, allowing that location to be used for
persistent data. This overrides to the Context section from the
application metadata. This option can be used multiple times.

#+end_quote

*--sdk-dir=DIR*

#+begin_quote
Normally if there is a usr directory in the build dir, this is used for
the runtime files (this can be created by *--writable-sdk* or
*--type=runtime* arguments to build-init). If you specify *--sdk-dir*,
this directory will be used instead. Use this if you passed *--sdk-dir*
to build-init.

#+end_quote

*--readonly*

#+begin_quote
Mount the normally writable destination directories read-only. This can
be useful if you want to run something in the sandbox but guarantee that
it doesnt affect the build results. For example tests.

#+end_quote

*--metadata=FILE*

#+begin_quote
Use the specified filename as metadata in the exported app instead of
the default file (called metadata). This is useful if you build multiple
things from a single build tree (such as both a platform and a sdk).

#+end_quote

*--log-session-bus*

#+begin_quote
Log session bus traffic. This can be useful to see what access you need
to allow in your D-Bus policy.

#+end_quote

*--log-system-bus*

#+begin_quote
Log system bus traffic. This can be useful to see what access you need
to allow in your D-Bus policy.

#+end_quote

* EXAMPLES
*$ flatpak build /build/my-app rpmbuild my-app.src.rpm*

* SEE ALSO
*flatpak*(1), *flatpak-build-init*(1), *flatpak-build-finish*(1),
*flatpak-build-export*(1)

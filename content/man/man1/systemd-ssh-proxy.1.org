#+TITLE: Manpages - systemd-ssh-proxy.1
* NAME
systemd-ssh-proxy - SSH client plugin for connecting to *AF_VSOCK* and
*AF_UNIX* sockets

* SYNOPSIS
#+begin_example
Host unix/* vsock/*
    ProxyCommand /usr/lib/systemd/systemd-ssh-proxy %h %p
    ProxyUseFdpass yes
#+end_example

*/usr/lib/systemd/systemd-ssh-proxy* [ADDRESS] [PORT]

* DESCRIPTION
*systemd-ssh-proxy* is a small "proxy" plugin for the *ssh*(1) tool that
allows connecting to *AF_UNIX* and *AF_VSOCK* sockets. It implements the
interface defined by sshs /ProxyCommand/ configuration option. Its
supposed to be used with an *ssh_config*(5) configuration fragment like
the following:

#+begin_quote
#+begin_example
Host unix/* vsock/*
    ProxyCommand /usr/lib/systemd/systemd-ssh-proxy %h %p
    ProxyUseFdpass yes
    CheckHostIP no

Host .host
    ProxyCommand /usr/lib/systemd/systemd-ssh-proxy unix/run/ssh-unix-local/socket %p
    ProxyUseFdpass yes
    CheckHostIP no
#+end_example

#+end_quote

A configuration fragment along these lines is by default installed into
/etc/ssh/ssh_config.d/20-systemd-ssh-proxy.conf.in.

With this in place, SSH connections to host string "unix/" followed by
an absolute *AF_UNIX* file system path to a socket will be directed to
the specified socket, which must be of type *SOCK_STREAM*. Similar, SSH
connections to "vsock/" followed by an *AF_VSOCK* CID will result in an
SSH connection made to that CID. Moreover connecting to ".host" will
connect to the local host via SSH, without involving networking.

This tool is supposed to be used together with
*systemd-ssh-generator*(8) which when run inside a VM or container will
bind SSH to suitable addresses. *systemd-ssh-generator* is supposed to
run in the container of VM guest, and *systemd-ssh-proxy* is run on the
host, in order to connect to the container or VM guest.

* EXIT STATUS
On success, 0 is returned, a non-zero failure code otherwise.

* EXAMPLES
*Example 1. Talk to a local VM with CID 4711*

#+begin_quote
#+begin_example
ssh vsock/4711
#+end_example

#+end_quote

*Example 2. Talk to the local host via ssh*

#+begin_quote
#+begin_example
ssh .host
#+end_example

#+end_quote

or equivalent:

#+begin_quote
#+begin_example
ssh unix/run/ssh-unix-local/socket
#+end_example

#+end_quote

* SEE ALSO
*systemd*(1), *systemd-ssh-generator*(8), *vsock*(7), *unix*(7),
*ssh*(1), *sshd*(8)

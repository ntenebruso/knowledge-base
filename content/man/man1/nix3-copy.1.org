#+TITLE: Manpages - nix3-copy.1
#+begin_quote
*Warning*\\
This program is *experimental* and its interface is subject to change.

#+end_quote

* Name
=nix copy= - copy paths between Nix stores

* Synopsis
=nix copy= [/option/...] /installables/...

* Examples
- Copy Firefox from the local store to a binary cache in =/tmp/cache=:

#+begin_example
# nix copy --to file:///tmp/cache $(type -p firefox)
#+end_example

#+begin_quote
Note the =file://= - without this, the destination is a chroot store,
not a binary cache.

#+end_quote

- Copy all store paths from a local binary cache in =/tmp/cache= to the
  local store:

#+begin_example
# nix copy --all --from file:///tmp/cache
#+end_example

- Copy the entire current NixOS system closure to another machine via
  SSH:

#+begin_example
# nix copy --substitute-on-destination --to ssh://server /run/current-system
#+end_example

#+begin_quote
The =-s= flag causes the remote machine to try to substitute missing
store paths, which may be faster if the link between the local and
remote machines is slower than the link between the remote machine and
its substituters (e.g. =https://cache.nixos.org=).

#+end_quote

- Copy a closure from another machine via SSH:

#+begin_example
# nix copy --from ssh://server /nix/store/a6cnl93nk1wxnq84brbbwr6hxw9gp2w9-blender-2.79-rc2
#+end_example

- Copy Hello to a binary cache in an Amazon S3 bucket:

#+begin_example
# nix copy --to s3://my-bucket?region=eu-west-1 nixpkgs#hello
#+end_example

#+begin_quote
or to an S3-compatible storage system:

#+end_quote

#+begin_example
# nix copy --to s3://my-bucket?region=eu-west-1&endpoint=example.com nixpkgs#hello
#+end_example

#+begin_quote
Note that this only works if Nix is built with AWS support.

#+end_quote

- Copy a closure from =/nix/store= to the chroot store
  =/tmp/nix/nix/store=:

#+begin_example
# nix copy --to /tmp/nix nixpkgs#hello --no-check-sigs
#+end_example

* Description
=nix copy= copies store path closures between two Nix stores. The source
store is specified using =--from= and the destination using =--to=. If
one of these is omitted, it defaults to the local store.

* Options
- =--from= /store-uri/

  URL of the source Nix store.

- =--no-check-sigs=

  Do not require that paths are signed by trusted keys.

- =--stdin=

  Read installables from the standard input. No default installable
  applied.

- =--substitute-on-destination= / =-s=

  Whether to try substitutes on the destination store (only supported by
  SSH stores).

- =--to= /store-uri/

  URL of the destination Nix store.

** Common evaluation options
- =--arg= /name/ /expr/

  Pass the value /expr/ as the argument /name/ to Nix functions.

- =--arg-from-file= /name/ /path/

  Pass the contents of file /path/ as the argument /name/ to Nix
  functions.

- =--arg-from-stdin= /name/

  Pass the contents of stdin as the argument /name/ to Nix functions.

- =--argstr= /name/ /string/

  Pass the string /string/ as the argument /name/ to Nix functions.

- =--debugger=

  Start an interactive environment if evaluation fails.

- =--eval-store= /store-url/

  The *URL of the Nix store* to use for evaluation, i.e. to store
  derivations (=.drv= files) and inputs referenced by them.

- =--impure=

  Allow access to mutable paths and repositories.

- =--include= / =-I= /path/

  Add /path/ to search path entries used to resolve *lookup paths*

  This option may be given multiple times.

  Paths added through =-I= take precedence over the =nix-path=
  configuration setting and the =NIX_PATH= environment variable.

- =--override-flake= /original-ref/ /resolved-ref/

  Override the flake registries, redirecting /original-ref/ to
  /resolved-ref/.

** Common flake-related options
- =--commit-lock-file=

  Commit changes to the flake's lock file.

- =--inputs-from= /flake-url/

  Use the inputs of the specified flake as registry entries.

- =--no-registries=

  Don't allow lookups in the flake registries.

  #+begin_quote
  *DEPRECATED*

  #+end_quote

  #+begin_quote
  Use =--no-use-registries= instead.

  #+end_quote

- =--no-update-lock-file=

  Do not allow any updates to the flake's lock file.

- =--no-write-lock-file=

  Do not write the flake's newly generated lock file.

- =--output-lock-file= /flake-lock-path/

  Write the given lock file instead of =flake.lock= within the top-level
  flake.

- =--override-input= /input-path/ /flake-url/

  Override a specific flake input (e.g. =dwarffs/nixpkgs=). This implies
  =--no-write-lock-file=.

- =--recreate-lock-file=

  Recreate the flake's lock file from scratch.

  #+begin_quote
  *DEPRECATED*

  #+end_quote

  #+begin_quote
  Use =nix flake update= instead.

  #+end_quote

- =--reference-lock-file= /flake-lock-path/

  Read the given lock file instead of =flake.lock= within the top-level
  flake.

- =--update-input= /input-path/

  Update a specific flake input (ignoring its previous entry in the lock
  file).

  #+begin_quote
  *DEPRECATED*

  #+end_quote

  #+begin_quote
  Use =nix flake update= instead.

  #+end_quote

** Logging-related options
- =--debug=

  Set the logging verbosity level to â€˜debug'.

- =--log-format= /format/

  Set the format of log output; one of =raw=, =internal-json=, =bar= or
  =bar-with-logs=.

- =--print-build-logs= / =-L=

  Print full build logs on standard error.

- =--quiet=

  Decrease the logging verbosity level.

- =--verbose= / =-v=

  Increase the logging verbosity level.

** Miscellaneous global options
- =--help=

  Show usage information.

- =--offline=

  Disable substituters and consider all previously downloaded files
  up-to-date.

- =--option= /name/ /value/

  Set the Nix configuration setting /name/ to /value/ (overriding
  =nix.conf=).

- =--refresh=

  Consider all previously downloaded files out-of-date.

- =--repair=

  During evaluation, rewrite missing or corrupted files in the Nix
  store. During building, rebuild missing or corrupted store paths.

- =--version=

  Show version information.

** Options that change the interpretation of *installables*
- =--all=

  Apply the operation to every store path.

- =--derivation=

  Operate on the *store derivation* rather than its outputs.

- =--expr= /expr/

  Interpret /installables/ as attribute paths relative to the Nix
  expression /expr/.

- =--file= / =-f= /file/

  Interpret /installables/ as attribute paths relative to the Nix
  expression stored in /file/. If /file/ is the character -, then a Nix
  expression will be read from standard input. Implies =--impure=.

- =--no-recursive=

  Apply operation to specified paths only.

  *Note*

  See =man nix.conf= for overriding configuration settings with command
  line flags.

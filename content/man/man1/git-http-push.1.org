#+TITLE: Manpages - git-http-push.1
* NAME
git-http-push - Push objects over HTTP/DAV to another repository

* SYNOPSIS
#+begin_example
git http-push [--all] [--dry-run] [--force] [--verbose] <URL> <ref> [<ref>...]
#+end_example

* DESCRIPTION
Sends missing objects to the remote repository, and updates the remote
branch.

*NOTE*: This command is temporarily disabled if your libcurl is older
than 7.16, as the combination has been reported not to work and
sometimes corrupts the repository.

* OPTIONS
--all

#+begin_quote
Do not assume that the remote repository is complete in its current
state, and verify all objects in the entire local ref's history exist in
the remote repository.

#+end_quote

--force

#+begin_quote
Usually, the command refuses to update a remote ref that is not an
ancestor of the local ref used to overwrite it. This flag disables the
check. What this means is that the remote repository can lose commits;
use it with care.

#+end_quote

--dry-run

#+begin_quote
Do everything except actually send the updates.

#+end_quote

--verbose

#+begin_quote
Report the list of objects being walked locally and the list of objects
successfully sent to the remote repository.

#+end_quote

-d, -D

#+begin_quote
Remove <ref> from remote repository. The specified branch cannot be the
remote HEAD. If -d is specified, the following other conditions must
also be met:

#+begin_quote
·

Remote HEAD must resolve to an object that exists locally

#+end_quote

#+begin_quote
·

Specified branch resolves to an object that exists locally

#+end_quote

#+begin_quote
·

Specified branch is an ancestor of the remote HEAD

#+end_quote

#+end_quote

<ref>...

#+begin_quote
The remote refs to update.

#+end_quote

* SPECIFYING THE REFS
A /<ref>/ specification can be either a single pattern, or a pair of
such patterns separated by a colon ":" (this means that a ref name
cannot have a colon in it). A single pattern /<name>/ is just a
shorthand for /<name>:<name>/.

Each pattern pair /<src>:<dst>/ consists of the source side (before the
colon) and the destination side (after the colon). The ref to be pushed
is determined by finding a match that matches the source side, and where
it is pushed is determined by using the destination side.

#+begin_quote
·

It is an error if /<src>/ does not match exactly one of the local refs.

#+end_quote

#+begin_quote
·

If /<dst>/ does not match any remote ref, either

#+begin_quote
·

it has to start with "refs/"; <dst> is used as the destination literally
in this case.

#+end_quote

#+begin_quote
·

<src> == <dst> and the ref that matched the <src> must not exist in the
set of remote refs; the ref matched <src> locally is used as the name of
the destination.

#+end_quote

#+end_quote

Without ‘--force`, the <src> ref is stored at the remote only if <dst>
does not exist, or <dst> is a proper subset (i.e. an ancestor) of <src>.
This check, known as "fast-forward check", is performed to avoid
accidentally overwriting the remote ref and losing other peoples'
commits from there.

With *--force*, the fast-forward check is disabled for all refs.

Optionally, a <ref> parameter can be prefixed with a plus /+/ sign to
disable the fast-forward check only on that ref.

* GIT
Part of the *git*(1) suite

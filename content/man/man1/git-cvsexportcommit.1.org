#+TITLE: Manpages - git-cvsexportcommit.1
* NAME
git-cvsexportcommit - Export a single commit to a CVS checkout

* SYNOPSIS
#+begin_example
git cvsexportcommit [-h] [-u] [-v] [-c] [-P] [-p] [-a] [-d <cvsroot>]
        [-w <cvs-workdir>] [-W] [-f] [-m <msgprefix>] [<parent-commit>] <commit-id>
#+end_example

* DESCRIPTION
Exports a commit from Git to a CVS checkout, making it easier to merge
patches from a Git repository into a CVS repository.

Specify the name of a CVS checkout using the -w switch or execute it
from the root of the CVS working copy. In the latter case GIT_DIR must
be defined. See examples below.

It does its best to do the safe thing, it will check that the files are
unchanged and up to date in the CVS checkout, and it will not autocommit
by default.

Supports file additions, removals, and commits that affect binary files.

If the commit is a merge commit, you must tell /git cvsexportcommit/
what parent the changeset should be done against.

* OPTIONS
-c

#+begin_quote
Commit automatically if the patch applied cleanly. It will not commit if
any hunks fail to apply or there were other problems.

#+end_quote

-p

#+begin_quote
Be pedantic (paranoid) when applying patches. Invokes patch with
--fuzz=0

#+end_quote

-a

#+begin_quote
Add authorship information. Adds Author line, and Committer (if
different from Author) to the message.

#+end_quote

-d

#+begin_quote
Set an alternative CVSROOT to use. This corresponds to the CVS -d
parameter. Usually users will not want to set this, except if using CVS
in an asymmetric fashion.

#+end_quote

-f

#+begin_quote
Force the merge even if the files are not up to date.

#+end_quote

-P

#+begin_quote
Force the parent commit, even if it is not a direct parent.

#+end_quote

-m

#+begin_quote
Prepend the commit message with the provided prefix. Useful for patch
series and the like.

#+end_quote

-u

#+begin_quote
Update affected files from CVS repository before attempting export.

#+end_quote

-k

#+begin_quote
Reverse CVS keyword expansion (e.g. $Revision: 1.2.3.4$ becomes
$Revision$) in working CVS checkout before applying patch.

#+end_quote

-w

#+begin_quote
Specify the location of the CVS checkout to use for the export. This
option does not require GIT_DIR to be set before execution if the
current directory is within a Git repository. The default is the value
of /cvsexportcommit.cvsdir/.

#+end_quote

-W

#+begin_quote
Tell cvsexportcommit that the current working directory is not only a
Git checkout, but also the CVS checkout. Therefore, Git will reset the
working directory to the parent commit before proceeding.

#+end_quote

-v

#+begin_quote
Verbose.

#+end_quote

* CONFIGURATION
cvsexportcommit.cvsdir

#+begin_quote
The default location of the CVS checkout to use for the export.

#+end_quote

* EXAMPLES
Merge one patch into CVS

#+begin_quote

#+begin_quote
#+begin_example
$ export GIT_DIR=~/project/.git
$ cd ~/project_cvs_checkout
$ git cvsexportcommit -v <commit-sha1>
$ cvs commit -F .msg <files>
#+end_example

#+end_quote

#+end_quote

Merge one patch into CVS (-c and -w options). The working directory is
within the Git Repo

#+begin_quote

#+begin_quote
#+begin_example
        $ git cvsexportcommit -v -c -w ~/project_cvs_checkout <commit-sha1>
#+end_example

#+end_quote

#+end_quote

Merge pending patches into CVS automatically --- only if you really know
what you are doing

#+begin_quote

#+begin_quote
#+begin_example
$ export GIT_DIR=~/project/.git
$ cd ~/project_cvs_checkout
$ git cherry cvshead myhead | sed -n s/^+ //p | xargs -l1 git cvsexportcommit -c -p -v
#+end_example

#+end_quote

#+end_quote

* GIT
Part of the *git*(1) suite

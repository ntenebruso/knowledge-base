#+TITLE: Manpages - git-grep.1
* NAME
git-grep - Print lines matching a pattern

* SYNOPSIS
#+begin_example
git grep [-a | --text] [-I] [--textconv] [-i | --ignore-case] [-w | --word-regexp]
           [-v | --invert-match] [-h|-H] [--full-name]
           [-E | --extended-regexp] [-G | --basic-regexp]
           [-P | --perl-regexp]
           [-F | --fixed-strings] [-n | --line-number] [--column]
           [-l | --files-with-matches] [-L | --files-without-match]
           [(-O | --open-files-in-pager) [<pager>]]
           [-z | --null]
           [ -o | --only-matching ] [-c | --count] [--all-match] [-q | --quiet]
           [--max-depth <depth>] [--[no-]recursive]
           [--color[=<when>] | --no-color]
           [--break] [--heading] [-p | --show-function]
           [-A <post-context>] [-B <pre-context>] [-C <context>]
           [-W | --function-context]
           [(-m | --max-count) <num>]
           [--threads <num>]
           [-f <file>] [-e] <pattern>
           [--and|--or|--not|(|)|-e <pattern>...]
           [--recurse-submodules] [--parent-basename <basename>]
           [ [--[no-]exclude-standard] [--cached | --untracked | --no-index] | <tree>...]
           [--] [<pathspec>...]
#+end_example

* DESCRIPTION
Look for specified patterns in the tracked files in the work tree, blobs
registered in the index file, or blobs in given tree objects. Patterns
are lists of one or more search expressions separated by newline
characters. An empty string as search expression matches all lines.

* OPTIONS
--cached

#+begin_quote
Instead of searching tracked files in the working tree, search blobs
registered in the index file.

#+end_quote

--untracked

#+begin_quote
In addition to searching in the tracked files in the working tree,
search also in untracked files.

#+end_quote

--no-index

#+begin_quote
Search files in the current directory that is not managed by Git, or by
ignoring that the current directory is managed by Git. This is rather
similar to running the regular *grep(1)* utility with its *-r* option
specified, but with some additional benefits, such as using pathspec
patterns to limit paths; see the /pathspec/ entry in *gitglossary*(7)
for more information.

This option cannot be used together with *--cached* or *--untracked*.
See also *grep.fallbackToNoIndex* in /CONFIGURATION/ below.

#+end_quote

--no-exclude-standard

#+begin_quote
Also search in ignored files by not honoring the *.gitignore* mechanism.
Only useful with *--untracked*.

#+end_quote

--exclude-standard

#+begin_quote
Do not pay attention to ignored files specified via the *.gitignore*
mechanism. Only useful when searching files in the current directory
with *--no-index*.

#+end_quote

--recurse-submodules

#+begin_quote
Recursively search in each submodule that is active and checked out in
the repository. When used in combination with the /<tree>/ option the
prefix of all submodule output will be the name of the parent project's
/<tree>/ object. This option cannot be used together with *--untracked*,
and it has no effect if *--no-index* is specified.

#+end_quote

-a, --text

#+begin_quote
Process binary files as if they were text.

#+end_quote

--textconv

#+begin_quote
Honor textconv filter settings.

#+end_quote

--no-textconv

#+begin_quote
Do not honor textconv filter settings. This is the default.

#+end_quote

-i, --ignore-case

#+begin_quote
Ignore case differences between the patterns and the files.

#+end_quote

-I

#+begin_quote
Don't match the pattern in binary files.

#+end_quote

--max-depth <depth>

#+begin_quote
For each <pathspec> given on command line, descend at most <depth>
levels of directories. A value of -1 means no limit. This option is
ignored if <pathspec> contains active wildcards. In other words if "a*"
matches a directory named "a*", "*" is matched literally so --max-depth
is still effective.

#+end_quote

-r, --recursive

#+begin_quote
Same as *--max-depth=-1*; this is the default.

#+end_quote

--no-recursive

#+begin_quote
Same as *--max-depth=0*.

#+end_quote

-w, --word-regexp

#+begin_quote
Match the pattern only at word boundary (either begin at the beginning
of a line, or preceded by a non-word character; end at the end of a line
or followed by a non-word character).

#+end_quote

-v, --invert-match

#+begin_quote
Select non-matching lines.

#+end_quote

-h, -H

#+begin_quote
By default, the command shows the filename for each match. *-h* option
is used to suppress this output. *-H* is there for completeness and does
not do anything except it overrides *-h* given earlier on the command
line.

#+end_quote

--full-name

#+begin_quote
When run from a subdirectory, the command usually outputs paths relative
to the current directory. This option forces paths to be output relative
to the project top directory.

#+end_quote

-E, --extended-regexp, -G, --basic-regexp

#+begin_quote
Use POSIX extended/basic regexp for patterns. Default is to use basic
regexp.

#+end_quote

-P, --perl-regexp

#+begin_quote
Use Perl-compatible regular expressions for patterns.

Support for these types of regular expressions is an optional
compile-time dependency. If Git wasn't compiled with support for them
providing this option will cause it to die.

#+end_quote

-F, --fixed-strings

#+begin_quote
Use fixed strings for patterns (don't interpret pattern as a regex).

#+end_quote

-n, --line-number

#+begin_quote
Prefix the line number to matching lines.

#+end_quote

--column

#+begin_quote
Prefix the 1-indexed byte-offset of the first match from the start of
the matching line.

#+end_quote

-l, --files-with-matches, --name-only, -L, --files-without-match

#+begin_quote
Instead of showing every matched line, show only the names of files that
contain (or do not contain) matches. For better compatibility with /git
diff/, *--name-only* is a synonym for *--files-with-matches*.

#+end_quote

-O[<pager>], --open-files-in-pager[=<pager>]

#+begin_quote
Open the matching files in the pager (not the output of /grep/). If the
pager happens to be "less" or "vi", and the user specified only one
pattern, the first file is positioned at the first match automatically.
The *pager* argument is optional; if specified, it must be stuck to the
option without a space. If *pager* is unspecified, the default pager
will be used (see *core.pager* in *git-config*(1)).

#+end_quote

-z, --null

#+begin_quote
Use \0 as the delimiter for pathnames in the output, and print them
verbatim. Without this option, pathnames with "unusual" characters are
quoted as explained for the configuration variable *core.quotePath* (see
*git-config*(1)).

#+end_quote

-o, --only-matching

#+begin_quote
Print only the matched (non-empty) parts of a matching line, with each
such part on a separate output line.

#+end_quote

-c, --count

#+begin_quote
Instead of showing every matched line, show the number of lines that
match.

#+end_quote

--color[=<when>]

#+begin_quote
Show colored matches. The value must be always (the default), never, or
auto.

#+end_quote

--no-color

#+begin_quote
Turn off match highlighting, even when the configuration file gives the
default to color output. Same as *--color=never*.

#+end_quote

--break

#+begin_quote
Print an empty line between matches from different files.

#+end_quote

--heading

#+begin_quote
Show the filename above the matches in that file instead of at the start
of each shown line.

#+end_quote

-p, --show-function

#+begin_quote
Show the preceding line that contains the function name of the match,
unless the matching line is a function name itself. The name is
determined in the same way as *git diff* works out patch hunk headers
(see /Defining a custom hunk-header/ in *gitattributes*(5)).

#+end_quote

-<num>, -C <num>, --context <num>

#+begin_quote
Show <num> leading and trailing lines, and place a line containing *--*
between contiguous groups of matches.

#+end_quote

-A <num>, --after-context <num>

#+begin_quote
Show <num> trailing lines, and place a line containing *--* between
contiguous groups of matches.

#+end_quote

-B <num>, --before-context <num>

#+begin_quote
Show <num> leading lines, and place a line containing *--* between
contiguous groups of matches.

#+end_quote

-W, --function-context

#+begin_quote
Show the surrounding text from the previous line containing a function
name up to the one before the next function name, effectively showing
the whole function in which the match was found. The function names are
determined in the same way as *git diff* works out patch hunk headers
(see /Defining a custom hunk-header/ in *gitattributes*(5)).

#+end_quote

-m <num>, --max-count <num>

#+begin_quote
Limit the amount of matches per file. When using the *-v* or
*--invert-match* option, the search stops after the specified number of
non-matches. A value of -1 will return unlimited results (the default).
A value of 0 will exit immediately with a non-zero status.

#+end_quote

--threads <num>

#+begin_quote
Number of *grep* worker threads to use. See /NOTES ON THREADS/ and
*grep.threads* in /CONFIGURATION/ for more information.

#+end_quote

-f <file>

#+begin_quote
Read patterns from <file>, one per line.

Passing the pattern via <file> allows for providing a search pattern
containing a \0.

Not all pattern types support patterns containing \0. Git will error out
if a given pattern type can't support such a pattern. The
*--perl-regexp* pattern type when compiled against the PCRE v2 backend
has the widest support for these types of patterns.

In versions of Git before 2.23.0 patterns containing \0 would be
silently considered fixed. This was never documented, there were also
odd and undocumented interactions between e.g. non-ASCII patterns
containing \0 and *--ignore-case*.

In future versions we may learn to support patterns containing \0 for
more search backends, until then we'll die when the pattern type in
question doesn't support them.

#+end_quote

-e

#+begin_quote
The next parameter is the pattern. This option has to be used for
patterns starting with *-* and should be used in scripts passing user
input to grep. Multiple patterns are combined by /or/.

#+end_quote

--and, --or, --not, ( ... )

#+begin_quote
Specify how multiple patterns are combined using Boolean expressions.
*--or* is the default operator. *--and* has higher precedence than
*--or*. *-e* has to be used for all patterns.

#+end_quote

--all-match

#+begin_quote
When giving multiple pattern expressions combined with *--or*, this flag
is specified to limit the match to files that have lines to match all of
them.

#+end_quote

-q, --quiet

#+begin_quote
Do not output matched lines; instead, exit with status 0 when there is a
match and with non-zero status when there isn't.

#+end_quote

<tree>...

#+begin_quote
Instead of searching tracked files in the working tree, search blobs in
the given trees.

#+end_quote

--

#+begin_quote
Signals the end of options; the rest of the parameters are <pathspec>
limiters.

#+end_quote

<pathspec>...

#+begin_quote
If given, limit the search to paths matching at least one pattern. Both
leading paths match and glob(7) patterns are supported.

For more details about the <pathspec> syntax, see the /pathspec/ entry
in *gitglossary*(7).

#+end_quote

* EXAMPLES
*git grep time_t -- *.[ch]*

#+begin_quote
Looks for *time_t* in all tracked .c and .h files in the working
directory and its subdirectories.

#+end_quote

*git grep -e #define --and \( -e MAX_PATH -e PATH_MAX \)*

#+begin_quote
Looks for a line that has *#define* and either *MAX_PATH* or *PATH_MAX*.

#+end_quote

*git grep --all-match -e NODE -e Unexpected*

#+begin_quote
Looks for a line that has *NODE* or *Unexpected* in files that have
lines that match both.

#+end_quote

*git grep solution -- :^Documentation*

#+begin_quote
Looks for *solution*, excluding files in *Documentation*.

#+end_quote

* NOTES ON THREADS
The *--threads* option (and the *grep.threads* configuration) will be
ignored when *--open-files-in-pager* is used, forcing a single-threaded
execution.

When grepping the object store (with *--cached* or giving tree objects),
running with multiple threads might perform slower than single-threaded
if *--textconv* is given and there are too many text conversions. Thus,
if low performance is experienced in this case, it might be desirable to
use *--threads=1*.

* CONFIGURATION
Everything below this line in this section is selectively included from
the *git-config*(1) documentation. The content is the same as what's
found there:

grep.lineNumber

#+begin_quote
If set to true, enable *-n* option by default.

#+end_quote

grep.column

#+begin_quote
If set to true, enable the *--column* option by default.

#+end_quote

grep.patternType

#+begin_quote
Set the default matching behavior. Using a value of /basic/, /extended/,
/fixed/, or /perl/ will enable the *--basic-regexp*,
*--extended-regexp*, *--fixed-strings*, or *--perl-regexp* option
accordingly, while the value /default/ will use the
*grep.extendedRegexp* option to choose between /basic/ and /extended/.

#+end_quote

grep.extendedRegexp

#+begin_quote
If set to true, enable *--extended-regexp* option by default. This
option is ignored when the *grep.patternType* option is set to a value
other than /default/.

#+end_quote

grep.threads

#+begin_quote
Number of grep worker threads to use. If unset (or set to 0), Git will
use as many threads as the number of logical cores available.

#+end_quote

grep.fullName

#+begin_quote
If set to true, enable *--full-name* option by default.

#+end_quote

grep.fallbackToNoIndex

#+begin_quote
If set to true, fall back to *git grep --no-index* if *git grep* is
executed outside of a git repository. Defaults to false.

#+end_quote

* GIT
Part of the *git*(1) suite
